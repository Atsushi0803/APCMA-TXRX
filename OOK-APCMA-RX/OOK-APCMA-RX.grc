options:
  parameters:
    author: Atsushi.N
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: OOK_APCMA_RX
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: APCMA_Demodulation
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: Bits_Per_Symbol
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 132.0]
    rotation: 0
    state: enabled
- name: Slot_Length
  id: variable
  parameters:
    comment: ''
    value: '400'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 132.0]
    rotation: 0
    state: enabled
- name: Sub_Slot_Rate
  id: variable
  parameters:
    comment: ''
    value: '5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 132.0]
    rotation: 0
    state: enabled
- name: Threshhold
  id: variable
  parameters:
    comment: ''
    value: '400'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 132.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 20.0]
    rotation: 0
    state: enabled
- name: blocks_throttle_0
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 236.0]
    rotation: 0
    state: true
- name: blocks_wavfile_source_0
  id: blocks_wavfile_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    file: C:\data.wav
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '2'
    repeat: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 224.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport math\n\nclass\
      \ signal_detection(gr.decim_block):\n    def __init__(self, slot_length=400,\
      \ sub_slot_rate=5, threshhold=0.1):\n        gr.decim_block.__init__(self,\n\
      \            name='Signal Detection',\n            in_sig=[np.float32, np.float32],\n\
      \            out_sig=[np.float32],\n            decim = slot_length/sub_slot_rate)\n\
      \n        self.decim = int(slot_length/sub_slot_rate)\n        self.set_relative_rate(sub_slot_rate/slot_length)\n\
      \        self.threshhold = threshhold\n\n    def work(self, input_items, output_items):\n\
      \        tmp = [(abs(input_items[0][i]) > 0.1) or (abs(input_items[1][i]) >\
      \ 0.1) for i in range(len(input_items[0]))]\n        output_items[0][:] = [sum(tmp[i\
      \ * self.decim:(i + 1) * self.decim]) > self.decim * 0.5 for i in range(len(output_items[0][:]))]\n\
      \        return len(output_items[0][:])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    slot_length: Slot_Length
    sub_slot_rate: Sub_Slot_Rate
    threshhold: Threshhold
  states:
    _io_cache: ('Signal Detection', 'signal_detection', [('slot_length', '400'), ('sub_slot_rate',
      '5'), ('threshhold', '0.1')], [('0', 'float', 1), ('1', 'float', 1)], [('0',
      'float', 1)], '', ['threshhold'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 220.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    Sub_slot_rate: Sub_Slot_Rate
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\n\nclass pulse_detection(gr.decim_block):\n\
      \    def __init__(self, Sub_slot_rate=5):\n        gr.decim_block.__init__(self,\n\
      \            name='Pulse Detection',\n            in_sig=[np.float32],\n   \
      \         out_sig=[np.float32],\n            decim = 5)\n        self.decim\
      \ = Sub_slot_rate\n        self.set_relative_rate(1.0/self.decim)\n\n    def\
      \ work(self, input_items, output_items):\n        output_items[0][:] = [sum(input_items[0][j+self.decim*i]\
      \ > 0.5 for j in range(self.decim)) >= 3 for i in range(len(output_items[0][:]))]\n\
      \        return len(output_items[0][:])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Pulse Detection', 'pulse_detection', [('Sub_slot_rate', '5')], [('0',
      'float', 1)], [('0', 'float', 1)], '', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 236.0]
    rotation: 0
    state: enabled
- name: epy_block_2
  id: epy_block
  parameters:
    B: Bits_Per_Symbol
    _source_code: "import numpy as np\nfrom gnuradio import gr\n\n\nclass APCMA_Decode(gr.sync_block):\n\
      \    def __init__(self, B=2):\n        gr.sync_block.__init__(\n           \
      \ self,\n            name='Decoding APCMA',\n            in_sig=[np.float32],\n\
      \            out_sig=[np.float32]\n        )\n\n        # \u5FA9\u53F7\u3059\
      \u308B\u305F\u3081\u306B\u53C2\u7167\u3059\u308B\u30D1\u30EB\u30B9\u5217\u306E\
      \u4F5C\u6210\n        self.B = B # [bits/symbol]\n        self.Nslot = 2 **\
      \ (self.B + 1) + 5\n        self.ApcmaCode = [[0] * self.Nslot for i in range(2\
      \ ** self.B)]\n        for i in range(2 ** self.B):\n            self.ApcmaCode[i][0]\
      \ = 1\n            self.ApcmaCode[i][i + 2] = 1\n            self.ApcmaCode[i][-\
      \ i - 3] = 1\n            self.ApcmaCode[i][-1] = 1\n\n        self.PulseList\
      \ = np.zeros(self.Nslot)  # \u5165\u529B\u3055\u308C\u305F\u30D1\u30EB\u30B9\
      \u5217\u306E\u30EA\u30B9\u30C8\n\n    def work(self, input_items, output_items):\n\
      \        for i in range(len(input_items[0][:])):\n            self.PulseList\
      \ = np.append(self.PulseList[1:], input_items[0][i])\n            print(self.PulseList)\n\
      \            for j in range(len(self.ApcmaCode)):\n                if np.all(self.PulseList\
      \ == self.ApcmaCode[j]):\n                    print(f'Word:{j}')\n        output_items[0][:]\
      \ = input_items[0][:]\n        return len(output_items[0][:])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Decoding APCMA', 'APCMA_Decode', [('B', '2')], [('0', 'float', 1)],
      [('0', 'float', 1)], '', ['B'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [920, 236.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1088, 220.0]
    rotation: 0
    state: true

connections:
- [blocks_throttle_0, '0', epy_block_1, '0']
- [blocks_wavfile_source_0, '0', epy_block_0, '0']
- [blocks_wavfile_source_0, '1', epy_block_0, '1']
- [epy_block_0, '0', blocks_throttle_0, '0']
- [epy_block_1, '0', epy_block_2, '0']
- [epy_block_2, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
